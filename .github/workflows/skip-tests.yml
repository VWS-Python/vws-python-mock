---

# We check that using all --skip options does not error.

name: Skip tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # * is a special character in YAML so you have to quote this string
    # Run at 1:00 every day
    - cron: 0 1 * * *
  workflow_dispatch: {}

jobs:
  build:

    strategy:
      matrix:
        python-version: ['3.13']
        platform: [ubuntu-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: '**/pyproject.toml'

      - name: Set secrets file
        run: |
          cp ./vuforia_secrets.env.example ./vuforia_secrets.env

      - name: Run tests
        run: |
          uv run --extra=dev pytest \
            --skip-docker_build_tests \
            --skip-docker_in_memory \
            --skip-mock \
            --skip-real \
            --capture=no \
            -vvv \
            --exitfirst \
            --cov=src/ \
            --cov=tests/ \
            --cov-report=xml \
            .
        env:
          UV_PYTHON: ${{ matrix.python-version }}

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-skip-tests-${{ matrix.python-version }}
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: ignore

  completion-skip-tests:
    needs: build
    runs-on: ubuntu-latest
    if: always()  # Run even if one matrix job fails
    steps:
      - name: Check matrix job status
        run: |-
          if ! ${{ needs.build.result == 'success' }}; then
            echo "One or more matrix jobs failed"
            exit 1
          fi

  coverage-skip-tests:
    name: Combine & check coverage (skip-tests)
    if: always()
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          # Use latest Python, so it understands all syntax.
          python-version: '3.13'

      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-skip-tests-*
          merge-multiple: true

      - name: Combine coverage & fail if it's <100%
        run: |
          uv tool install 'coverage[toml]'

          coverage combine
          coverage html --skip-covered --skip-empty

          # Report and write to summary.
          coverage report --format=markdown >> "$GITHUB_STEP_SUMMARY"

          # Report again and fail if under 100%.
          coverage report --fail-under=100

      - name: Upload HTML report if check failed
        uses: actions/upload-artifact@v4
        with:
          name: html-report-skip-tests
          path: htmlcov
        if: ${{ failure() }}
